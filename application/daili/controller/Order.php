<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2019/6/24 0024
 * Time: 17:46
 */

namespace app\daili\controller;
use app\common\controller\Business;

class Order extends Business
{
    private $pre = "ss";
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->pre = config("database.prefix");
        $this->table = "Order";
        $this->model = model( "Order");
    }

    /**
     * 2019/6/27 0027 15:34
     * @desc 普通订单
     * @ApiParams
     * @ApiReturnParams
     */
    public function index()
    {
        if( $this->request->isPost() && $this->request->isAjax() )
        {
            $page = $this->request->param('page', 1, 'intval');
            $per = $this->request->param('limit', 10, 'intval');
            $passageway_id = $this->request->param('passageway_id');
            $where = [
                'a.business_id'   => $this->user['id'],
                'a.delete_time'   => 0
            ];
            //订单创建日期筛选
            $stime = $this->request->param('stime', 0);
            $ltime = $this->request->param('ltime', 0);
            if (empty($stime) && !empty($ltime)) {
                $ltime = strtotime($ltime);
                $where['a.create_time'] = ['<=', $ltime];
            }
            if (!empty($stime) && empty($ltime)) {
                $stime = strtotime($stime);
                $where['a.create_time'] = ['>', $stime];
            }
            if (!empty($stime) && !empty($ltime)) {
                $ltime = strtotime($ltime);
                $stime = strtotime($stime);
                $where['a.create_time'] = ['between', [$stime, $ltime]];
            }

            if (!empty($passageway_id)) {
                $passageway = db('user_passageway')->where(['passageway_id' => $passageway_id])->field(["id","business_id"])->select();
                if (!empty($passageway)) {
                    $where['a.business_id'] = ['in', array_column($passageway, 'business_id')];
                    $where['a.user_passageway_id'] = ['in', array_column($passageway, 'id')];
                } else {
                    $this->error('通道错误');
                }
            }
            //订单支付方式筛选
            $way = $this->request->param('way', 0, 'intval');
            if( !empty( $way ) ) $where['p.id'] = $way;
            //订单状态筛选
            $way = $this->request->param('status', 0, 'intval');
            if( !empty( $way ) ) $where['a.status'] = $way-1;
            //交易流水号筛选
            $way = $this->request->param('batch', "");
            if( !empty( $way ) ) $where['a.batch'] = $way;
            $join = [
                [$this->pre."passageway p",'p.id = a.user_passageway_id', 'left'],
            ];
            $field = "a.id,p.name,a.create_time,a.order_id,a.batch,a.amount,a.commission,a.service_charges,a.pay_time,a.status,a.user_passageway_id,a.business_id,a.pay_from,a.back_time,a.back_status";
            $list = $this->model
                ->alias( "a")
                ->field( $field )
                ->join( $join )
                ->where( $where )
                ->order( "id desc")
                ->limit( ($page-1)*$per, $per)
                ->select();
            $sql = $this->model->getLastSql();
            $count = $this->model
                ->alias( "a")
                ->join( $join )
                ->where( $where )
                ->count();
            $this->success( "数据加载成功！",'',['list'=>$list,'count'=>$count,'sql'=>$sql]);
        }
        $where = [
            'delete_time'   => 0,
            'status'        => 1
        ];
        $passageway_list = db( "passageway")->field('id,name')->where( $where )->select();
        $this->assign( 'passageway_list', $passageway_list);
        return $this->fetch();
    }

    /**
     * 2019/6/27 0027 15:34
     * @desc 提现订单
     * @ApiParams
     * @ApiReturnParams
     */
    public function withdraw()
    {
        if( $this->request->isPost() && $this->request->isAjax() )
        {
            $page = $this->request->param('page', 1, 'intval');
            $per = $this->request->param('limit', 10, 'intval');
            $where = [
                'a.bus_id'   => $this->user['id'],
                'a.delete_time'   => 0
            ];
            //订单创建日期筛选
            $stime = $this->request->param('stime', 0);
            $ltime = $this->request->param('ltime', 0);
            if (empty($stime) && !empty($ltime)) {
                $ltime = strtotime($ltime);
                $where['a.create_time'] = ['<=', $ltime];
            }
            if (!empty($stime) && empty($ltime)) {
                $stime = strtotime($stime);
                $where['a.create_time'] = ['>', $stime];
            }
            if (!empty($stime) && !empty($ltime)) {
                $ltime = strtotime($ltime);
                $stime = strtotime($stime);
                $where['a.create_time'] = ['between', [$stime, $ltime]];
            }
            $this->model = model( "withdraw");
            $join = [
                [$this->pre."account c",'c.business_id = a.bus_id', 'left'],
            ];
            $field = "a.*,c.ali_name,c.ali_user,c.we_name,c.we_user,c.un_name,c.un_user,c.un_bank,c.un_branch";
            $list = $this->model
                ->alias( "a")
                ->field( $field )
                ->join( $join )
                ->where( $where )
                ->order( "id desc")
                ->limit( ($page-1)*$per, $per)
                ->select();
            $sql = $this->model->getLastSql();
            $count = $this->model
                ->alias( "a")
                ->join( $join )
                ->where( $where )
                ->count();
            $this->success( "数据加载成功！",'',['list'=>$list,'count'=>$count,'sql'=>$sql]);
        }
        return $this->fetch();
    }
}