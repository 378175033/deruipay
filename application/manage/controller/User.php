<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2019/6/17 0017
 * Time: 9:18
 */

namespace app\manage\controller;
use app\common\controller\Manage;
use think\Db;
class User extends Manage
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->table = "User";
        $this->model = model( "User");
//        echo Db::table( "my_supper_product")
//            ->alias('sp')
//            ->where( function ( $query ){
//                $query->table(function ( $qus ){
//                    $qus->table('my_order_detail')->field("distinct od1.productid")->alias( 'od1');
//                })->alias('od')->where( "od.productid = sp.id");
//            }, "NOT EXISTS")
//            ->buildSql();
//        echo Db::table( "ss_user")
//            ->alias('sp')
//            ->where( function ( $query ){
//                $query->table(function ( $qus ){
//                    $qus->table('ss_login_log')->field("distinct od1.user_id")->alias( 'od1');
//                })->alias('od')->where( "od.user_id = sp.id");
//            }, "NOT EXISTS")
//            ->buildSql();
    }

    public function index()
    {
        $user_id =  session('userInfo')['id'];
        $this->assign('user_id',$user_id);
        if ($this->request->isPost() && $this->request->isAjax()) {
            $users = $this->model->where('delete_time',0)->select();
            if($user_id != 1){

                foreach ($users as $user){
                    $user['mobile'] = substr_replace($user['mobile'], '****', 3, 4);
                }
            }
            $sql = $this->model->getLastSql();
            $count = $this->model->count();
            $data = [
                'list' => $users,
                'count' => $count,
                'sql'   => $sql,
            ];
            $this->success('获取成功','',$data);
        }

        return $this->fetch();

    }

    public function add()
    {
        if( request()->isAjax() && request()->isAjax() ){
            $password = $this->request->param( 'password', '');
            if( empty( $password ) ){
                $this->error( "密码不能为空！");
            }
            if( !preg_match('/^\w{6,12}$/', $password) ){
                $this->error( "请输入6-12位由数字字母下划线组成的密码！");
            }
            $data = $this->request->param();
            $data['salt'] = getSalt();
            $data['password'] = encode_password( $password, $data['salt'] );
            $data['create_time'] = time();
            if( $this->isValidate ){
                $validate = validate($this->table);
                if (!$validate->check($data)) {
                    $this->error($validate->getError());
                }
            }
            $res = $this->model->allowField( true )->data($data)->isUpdate( false )->save();
            if ($res) {
                operaLog($this->admin_id.'添加user');
                $this->success('新增成功');
            }
            $this->error('新增失败！');
        }
        return $this->fetch();
    }

    public function edit()
    {
        $id = $this->request->param('id', 0, 'intval');
        if (empty($id)) {
            $this->error("参数错误！");
        }
        if( request()->isAjax() && request()->isAjax() ){
            $data = $this->request->param();
            $password = $this->request->param( 'password', '');
            if( !empty( $password ) ){
                if( !preg_match('/^\w{6,12}$/', $password) ){
                    $this->error( "请输入6-12位由数字字母下划线组成的密码！");
                }
                $data['salt'] = getSalt();
                $data['password'] = encode_password( $password, $data['salt'] );
            };
            if( $this->isValidate ){
                $validate = validate($this->table);
                if (!$validate->check($data)) {
                    $this->error($validate->getError());
                }
            }
            $res = $this->model->allowField( true )->data($data)->isUpdate( true )->save();
            if ($res) {
                operaLog($this->admin_id.'更新user:'.$id);
                $this->success('更新成功');
            }
            $this->error('更新失败！');
        }
        $data = $this->model->where('id', $id)->find();
        $this->assign('data', $data);
        return $this->fetch();
    }

    /**
     * 2019/6/19 0019 9:21
     * @desc个人中心
     * @ApiParams
     * @ApiReturnParams
     */
    public function center()
    {
        return $this->fetch();
    }
    /**
     * 2019/6/17 0017 16:34
     * @desc 配置用户权限
     * @ApiParams
     * @ApiReturnParams
     */
    public function auth()
    {
        $id = request()->param( 'id', 0, 'intval');
        if( empty( $id ) ) {
            die("参数错误！");
        }
        if( request()->isAjax() && request()->isPost() ){
            $rule = $this->request->param('rule', '');
            $res = $this->model->where('id',$id)->update(['rule' => $rule, 'update_time' => time()]);
            if( $res ){
                operaLog($this->admin_id.'配置权限');
                $this->success( "权限配置成功！");
            }
            $this->error("系统繁忙，请稍后再试！");
        }
        $where = [
            'id' => $id,
            'status'    => 1
        ];
        $rule = $this->model->where( $where )->field('rule')->find();
        if( $rule == false ){
            die('该数据不存在或为隐藏状态！');
        }
        $this->assign( 'rule', $rule['rule']);
        $this->assign('id', $id);
        return $this->fetch();
    }
}