<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2019/6/18 0018
 * Time: 14:39
 */

namespace app\common\controller;
use think\Controller;

class Business extends Controller
{
    /**
     * @var resource 模型变量
     */
    protected $model;
    protected $_limit = '';
    /**
     * @var bool 是否开启数据验证
     */
    protected $is_validate = false;
    /**
     * @var string 数据表名
     */
    protected $table;
    /**
     * @var string 定义默认排序
     */
    protected $order = 'id desc';
    /**
     * @var string 定义默认字段
     */
    protected $field = '*';
    /**
     * @var bool 是否进行验证
     */
    protected $isValidate = true;

    /**
     * @var array 登录商户的信息
     */
    protected $user;
    /**
     * @var array 筛选查询
     */
    protected $where;

    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->checkLogin();
    }

    /**
     * 2019/6/18 0018 14:45
     * @desc检查商户是否登录
     * @ApiParams
     * @ApiReturnParams
     */
    public function checkLogin()
    {
        if( !session( "?business") ){
            $this->redirect( url("business/Login/index") );
        }
        $this->user = model( 'business')->where('id', session('business')['id'])->find();
        $this->assign( "user", $this->user);
    }

    /**
     * @return mixed
     * 首页
     */
    public function index()
    {
        if ($this->request->isPost() && $this->request->isAjax()) {
            $page = $this->request->param('page', 1, 'intval');
            $per = $this->request->param('limit', 10, 'intval');
            $this->order = $this->request->param('order', $this->order);
            $where = [
                'delete_time' => 0,
            ];
            $where = array_merge( $where, $this->where );
            $param = $this->request->param();
            foreach ($param as $key => $val) {
                $ps = substr($key, 0, 2);
                $vl = substr($key, 2);
                switch ($ps) {
                    case 'l-':
                        if (!empty($val)) $where[$vl] = ['like', '%' . $val . '%'];
                        break;
                    case 'e-':
                        if (!empty($val))  $where[$vl] = $val;
                        break;
                    case 'i-':
                        if (!empty($val)) $where[$vl] = ['in',$val];
                        break;
                    default:
                        break;
                }
            }
            $stime = $this->request->param('stime', 0);
            $ltime = $this->request->param('ltime', 0);
            if (empty($stime) && !empty($ltime)) {
                $ltime = strtotime($ltime);
                $where['create_time'] = ['<=', $ltime];
            }
            if (!empty($stime) && empty($ltime)) {
                $stime = strtotime($stime);
                $where['create_time'] = ['>', $stime];
            }
            if (!empty($stime) && !empty($ltime)) {
                $ltime = strtotime($ltime);
                $stime = strtotime($stime);
                $where['create_time'] = ['between', [$stime, $ltime]];
            }
            $page = $page - 1;
            $list = $this->model
                ->field($this->field)
                ->where($where)
                ->limit($page * $per, $per)
                ->order($this->order)
                ->select();
            $sql = $this->model->getLastSql();
            $count = $this->model->where($where)->count();
            $data = [
                'list' => $list,
                'count' => $count,
                'sql'   => $sql
            ];
            $this->success('获取成功！', '', $data);
        }
        return $this->fetch();
    }










}